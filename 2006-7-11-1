CAS – Content Access System

§3 Предыстория

Более десяти лет назад я попал в сети собственного тщеславия. Манящая своей
доступностью возможность публикации в открытый доступ своих окололитературных
изысков — заставила меня соорудить на бесплатном хостинге страничку. Того
восторженного, рассчитывавшего на немедленное признание мальчишки уже давно нет
в живых, мне совершенно не требуется признание и оплата хостинга давно внесена
в основную статью бюджета, но я по-прежнему выставляю то, что пишу, на всеобщее
поругание.

По мере того, как написанного становилось все больше и больше, я несколько раз
менял среду обитания. Начинал я с мало кому известного сейчас
http://www.tripod.com. Я выбрал его потому, что совершенно не владел языками
разметки, а Tripod  предоставлял Microsoft Frontpage Extensions даже бесплатным
пользователям. Спустя пару лет я переехал на http://narod.ru/. В 2001м  году я
наткнулся в сети на http://livejournal.com/, который меня восхитил своей
концепцией, и я немедленно купил себе членство в элитном клубе. Тогда этот
сервис не предоставлял бесплатной регистрации, а побираться «мы сами не
местные, поможите кодом» мне казалось постыдным. Спустя ограниченный промежуток
времени, я понял, что кое-что из опубликованного в интернет-дневнике хотелось
бы систематизировать, структурировать и выложить для, так сказать,
перманентного доступа. У меня к тому времени уже появились постоянные читатели.
Так появился (ныне канувший в лету) сайт http://matiouchkine.de/, который
работал на движке собственного производства на базе связки XML /XSLT . В
какой-то момент я растерялся продлить услугу хостинга, вернулся в Россию и
плюнул на свой «немецкий» сайт. Полностью переписал XSLT   для движка и народил
http://mudasobwa.ru/. Функциональности Lj   мне переставало хватать даже для
своей блог-активности. 

В это время я провел свое первое достаточно тщательное исследования
возможностей вошедших в моду CMS , и ни одна меня не устроила. Мне требовался
блог и структурированный «stable   site » в одном флаконе. К моему счастью, как
раз примерно в это время появился отечественный сервис http://npj.ru/,
отдаленно напоминавший то, что мне было нужно. Я перенес все свои заметки туда.
Однако, достаточно скоро мне стало тесно в рамках чужого сервиса, и я
окончательно решился на сопровождение собственного сайта со всей требующейся
мне функциональностью.

Движок Npj   к этому моменту уже был открыт, но его возможностей мне не
хватило. Я снова произвел анализ CMS , который показал, что за это время на
рынке появились очень грамотные продукты, написанные толковыми профессионалами.
После непродолжительных поисков я остановился на http://xaraya.com/, о чем не
жалею.

Эволюцию моих скитаний можно проиллюстрировать следующей таблицей:

▶ 1996 — http://tripod.com/...  *MS FP Extensions*
▶ 1997 — http://narod.ru/... *cтатические   страницы*
▶ 2001 — http://livejournal.com/... *блог over LjEngine*
▶ 2002 — http://matiouchkine.de/ *XML/XSLT*
▶ 2004 — http://npj.ru/ *блог + статьи over NpjEngine*
▶ 2004 — http://1stone.ru *XML/XSLT*
▶ 2006 — http://1stone.ru *Xaraya*
▶ 2007 — http://secondiary.ru *Xaraya*
▶ 2010 — http://mudasobwa.ru *Nette*
▶ 2013 — http://mudasobwa.ru *Ruhoh*

Итак, за все это время я практически впервые полностью доволен. Однако, мне уже
становится немножко тесно и в рамках даже такой совершенной системы, как Ruhoh.
И я решился писать свою CMS . 

Только эта система будет называться не CMS, а CAS   — Content   Access   System . Я сейчас поясню, что это значит.

§3 Что такое контент?

Для меня контент — это мои документы. Некоторые я хочу показать своим друзьям —
знакомым, и незнакомым — и с этой целью отправляю им почтой, или выкладываю в
сети. Документы — это байки, набранные обычным текстом,
фотографии, ссылки на ресурсы в сети, да что угодно. При этом я хочу — и
прикладываю, кстати, к тому все усилия — чтобы моим респондентам было удобно
работать с теми документами, которые я им решил передать для ознакомления.

Поэтому единица представления информации в CAS   — это, несомненно, документ в
его естественной ипостаси. Native . И тут я не принимаю никакие аргументы
против. В моей CAS   документы хранятся как есть, а уже показываются — как мне
заблагорассудится. Это и есть основной принцип разделения содержимого и
оформления в действии.

Далее, единица информации — это уже неплохо, но даже банальное почтовое
отправление предусматривает возможность «вложения». Поэтому из единиц
информации должны образовываться кластеры, которые я называю метадокументами. В
качестве примера могу сказать, что для создания на основе такой концепции
фотоальбома в качестве метадокумента выступит связка
фото-ярлычок-заголовок-комментарий, первые два — типа «изображение», заголовок
— просто текст и комментарий — размеченный текст (читай, документ OpenOffice ).
Фото и заголовок — обязательные, ярлычок и комментарий — нет. Вот такой вот
метадокумент.

При этом комментарий у меня будет храниться в папке ~/stories/travels/ ,
картинки в ~/photos/travels , а заголовок — я напишу при публикации вручную или
возьму из заголовка истории, которая выступит в роли комментария, потому что
эта сущность осмысленна только для публикации. Фотохудожники, кстати, не станут
использовать комментарий вовсе, либо сделают его publication -only   полем —
это будет уже немного иной метадокумент.

Еще одним примером метадокумента (внутреннего использования, но ведь CAS   —
это решение не только для Web !) может служить «search   all   available
documents   for   ‘Microsoft ’». Правильное оформление для выходных документов
— и мы почти поглотили функциональность Google   Desktop . 

Вот, в общем, и все.

§3 Как это сделать?

Да несложно, на самом деле.